Simulator report for PowerComputing
Wed May 04 02:46:39 2016
Quartus II Version 9.1 Build 222 10/21/2009 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 1.0 us       ;
; Simulation Netlist Size     ; 428 nodes    ;
; Simulation Coverage         ;      54.67 % ;
; Total Number of Transitions ; 1850         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; Stratix II   ;
+-----------------------------+--------------+


+-------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                      ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Option                                                                                     ; Setting    ; Default Value ;
+--------------------------------------------------------------------------------------------+------------+---------------+
; Simulation mode                                                                            ; Functional ; Timing        ;
; Start time                                                                                 ; 0 ns       ; 0 ns          ;
; Simulation results format                                                                  ; CVWF       ;               ;
; Add pins automatically to simulation output waveforms                                      ; On         ; On            ;
; Check outputs                                                                              ; Off        ; Off           ;
; Report simulation coverage                                                                 ; On         ; On            ;
; Display complete 1/0 value coverage report                                                 ; On         ; On            ;
; Display missing 1-value coverage report                                                    ; On         ; On            ;
; Display missing 0-value coverage report                                                    ; On         ; On            ;
; Detect setup and hold time violations                                                      ; Off        ; Off           ;
; Detect glitches                                                                            ; Off        ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off        ; Off           ;
; Generate Signal Activity File                                                              ; Off        ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off        ; Off           ;
; Group bus channels in simulation results                                                   ; Off        ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On         ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off        ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; Off        ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto       ; Auto          ;
+--------------------------------------------------------------------------------------------+------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      54.67 % ;
; Total nodes checked                                 ; 428          ;
; Total output ports checked                          ; 428          ;
; Total output ports with complete 1/0-value coverage ; 234          ;
; Total output ports with no 1/0-value coverage       ; 156          ;
; Total output ports with no 1-value coverage         ; 172          ;
; Total output ports with no 0-value coverage         ; 178          ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+--------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                            ;
+------------------------------------------+------------------------------------------+------------------+
; Node Name                                ; Output Port Name                         ; Output Port Type ;
+------------------------------------------+------------------------------------------+------------------+
; |Block1|SV_LTn                           ; |Block1|SV_LTn                           ; pin_out          ;
; |Block1|CLK                              ; |Block1|CLK                              ; out              ;
; |Block1|VB_LSB[0]                        ; |Block1|VB_LSB[0]                        ; pin_out          ;
; |Block1|StoreReg_EN                      ; |Block1|StoreReg_EN                      ; pin_out          ;
; |Block1|SUB                              ; |Block1|SUB                              ; pin_out          ;
; |Block1|VB_EQn                           ; |Block1|VB_EQn                           ; pin_out          ;
; |Block1|CTR_ENn                          ; |Block1|CTR_ENn                          ; pin_out          ;
; |Block1|CTR_CLRn                         ; |Block1|CTR_CLRn                         ; pin_out          ;
; |Block1|VA_EN                            ; |Block1|VA_EN                            ; pin_out          ;
; |Block1|VB_EN                            ; |Block1|VB_EN                            ; pin_out          ;
; |Block1|DIV[7]                           ; |Block1|DIV[7]                           ; pin_out          ;
; |Block1|DIV[6]                           ; |Block1|DIV[6]                           ; pin_out          ;
; |Block1|DIV[5]                           ; |Block1|DIV[5]                           ; pin_out          ;
; |Block1|DIV[4]                           ; |Block1|DIV[4]                           ; pin_out          ;
; |Block1|DIV[3]                           ; |Block1|DIV[3]                           ; pin_out          ;
; |Block1|DIV[2]                           ; |Block1|DIV[2]                           ; pin_out          ;
; |Block1|DIV[1]                           ; |Block1|DIV[1]                           ; pin_out          ;
; |Block1|DIV[0]                           ; |Block1|DIV[0]                           ; pin_out          ;
; |Block1|MUX[7]                           ; |Block1|MUX[7]                           ; pin_out          ;
; |Block1|MUX[6]                           ; |Block1|MUX[6]                           ; pin_out          ;
; |Block1|MUX[5]                           ; |Block1|MUX[5]                           ; pin_out          ;
; |Block1|MUX[4]                           ; |Block1|MUX[4]                           ; pin_out          ;
; |Block1|MUX[3]                           ; |Block1|MUX[3]                           ; pin_out          ;
; |Block1|POWER[2]                         ; |Block1|POWER[2]                         ; pin_out          ;
; |Block1|POWER[1]                         ; |Block1|POWER[1]                         ; pin_out          ;
; |Block1|POWER[0]                         ; |Block1|POWER[0]                         ; pin_out          ;
; |Block1|STOREDVALUE[7]                   ; |Block1|STOREDVALUE[7]                   ; pin_out          ;
; |Block1|STOREDVALUE[6]                   ; |Block1|STOREDVALUE[6]                   ; pin_out          ;
; |Block1|STOREDVALUE[5]                   ; |Block1|STOREDVALUE[5]                   ; pin_out          ;
; |Block1|STOREDVALUE[4]                   ; |Block1|STOREDVALUE[4]                   ; pin_out          ;
; |Block1|STOREDVALUE[3]                   ; |Block1|STOREDVALUE[3]                   ; pin_out          ;
; |Block1|STOREDVALUE[2]                   ; |Block1|STOREDVALUE[2]                   ; pin_out          ;
; |Block1|STOREDVALUE[1]                   ; |Block1|STOREDVALUE[1]                   ; pin_out          ;
; |Block1|STOREDVALUE[0]                   ; |Block1|STOREDVALUE[0]                   ; pin_out          ;
; |Block1|VA[7]                            ; |Block1|VA[7]                            ; pin_out          ;
; |Block1|VA[6]                            ; |Block1|VA[6]                            ; pin_out          ;
; |Block1|VA[5]                            ; |Block1|VA[5]                            ; pin_out          ;
; |Block1|VA[4]                            ; |Block1|VA[4]                            ; pin_out          ;
; |Block1|VA[3]                            ; |Block1|VA[3]                            ; pin_out          ;
; |Block1|VB[3]                            ; |Block1|VB[3]                            ; pin_out          ;
; |Block1|VB[2]                            ; |Block1|VB[2]                            ; pin_out          ;
; |Block1|VB[1]                            ; |Block1|VB[1]                            ; pin_out          ;
; |Block1|VB[0]                            ; |Block1|VB[0]                            ; pin_out          ;
; |Block1|COUNTER16:inst20|TEMP[0]         ; |Block1|COUNTER16:inst20|TEMP[0]         ; regout           ;
; |Block1|COUNTER16:inst20|TEMP~29         ; |Block1|COUNTER16:inst20|TEMP~29         ; out              ;
; |Block1|COUNTER16:inst20|TEMP~30         ; |Block1|COUNTER16:inst20|TEMP~30         ; out              ;
; |Block1|COUNTER16:inst20|TEMP~31         ; |Block1|COUNTER16:inst20|TEMP~31         ; out              ;
; |Block1|COUNTER16:inst20|TEMP~45         ; |Block1|COUNTER16:inst20|TEMP~45         ; out              ;
; |Block1|COUNTER16:inst20|TEMP~46         ; |Block1|COUNTER16:inst20|TEMP~46         ; out              ;
; |Block1|COUNTER16:inst20|TEMP~47         ; |Block1|COUNTER16:inst20|TEMP~47         ; out              ;
; |Block1|COUNTER16:inst20|TEMP[1]         ; |Block1|COUNTER16:inst20|TEMP[1]         ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[2]         ; |Block1|COUNTER16:inst20|TEMP[2]         ; regout           ;
; |Block1|SHIFT:inst9|TEMPout~8            ; |Block1|SHIFT:inst9|TEMPout~8            ; out              ;
; |Block1|SHIFT:inst9|TEMPout~9            ; |Block1|SHIFT:inst9|TEMPout~9            ; out              ;
; |Block1|SHIFT:inst9|TEMPout~10           ; |Block1|SHIFT:inst9|TEMPout~10           ; out              ;
; |Block1|SHIFT:inst9|TEMPout~11           ; |Block1|SHIFT:inst9|TEMPout~11           ; out              ;
; |Block1|SHIFT:inst9|TEMPout~24           ; |Block1|SHIFT:inst9|TEMPout~24           ; out              ;
; |Block1|SHIFT:inst9|TEMPout~25           ; |Block1|SHIFT:inst9|TEMPout~25           ; out              ;
; |Block1|SHIFT:inst9|TEMPout~26           ; |Block1|SHIFT:inst9|TEMPout~26           ; out              ;
; |Block1|SHIFT:inst9|TEMPout~27           ; |Block1|SHIFT:inst9|TEMPout~27           ; out              ;
; |Block1|SHIFT:inst9|TEMPout[3]           ; |Block1|SHIFT:inst9|TEMPout[3]           ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[4]           ; |Block1|SHIFT:inst9|TEMPout[4]           ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[5]           ; |Block1|SHIFT:inst9|TEMPout[5]           ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[6]           ; |Block1|SHIFT:inst9|TEMPout[6]           ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[7]           ; |Block1|SHIFT:inst9|TEMPout[7]           ; regout           ;
; |Block1|MUX:inst6|Dout[7]                ; |Block1|MUX:inst6|Dout[7]                ; out              ;
; |Block1|MUX:inst6|Dout[6]                ; |Block1|MUX:inst6|Dout[6]                ; out              ;
; |Block1|MUX:inst6|Dout[5]                ; |Block1|MUX:inst6|Dout[5]                ; out              ;
; |Block1|MUX:inst6|Dout[4]                ; |Block1|MUX:inst6|Dout[4]                ; out              ;
; |Block1|MUX:inst6|Dout[3]                ; |Block1|MUX:inst6|Dout[3]                ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[7]           ; |Block1|ADD_SUB:inst1|TOTAL[7]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[6]           ; |Block1|ADD_SUB:inst1|TOTAL[6]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[5]           ; |Block1|ADD_SUB:inst1|TOTAL[5]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[4]           ; |Block1|ADD_SUB:inst1|TOTAL[4]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[3]           ; |Block1|ADD_SUB:inst1|TOTAL[3]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[2]           ; |Block1|ADD_SUB:inst1|TOTAL[2]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[1]           ; |Block1|ADD_SUB:inst1|TOTAL[1]           ; out              ;
; |Block1|ADD_SUB:inst1|TOTAL[0]           ; |Block1|ADD_SUB:inst1|TOTAL[0]           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~13           ; |Block1|SHIFT:inst8|TEMPout~13           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~14           ; |Block1|SHIFT:inst8|TEMPout~14           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~15           ; |Block1|SHIFT:inst8|TEMPout~15           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~29           ; |Block1|SHIFT:inst8|TEMPout~29           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~30           ; |Block1|SHIFT:inst8|TEMPout~30           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~31           ; |Block1|SHIFT:inst8|TEMPout~31           ; out              ;
; |Block1|SHIFT:inst8|TEMPout[0]           ; |Block1|SHIFT:inst8|TEMPout[0]           ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[1]           ; |Block1|SHIFT:inst8|TEMPout[1]           ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[2]           ; |Block1|SHIFT:inst8|TEMPout[2]           ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[3]           ; |Block1|SHIFT:inst8|TEMPout[3]           ; regout           ;
; |Block1|COMPAR:inst4|comb~1              ; |Block1|COMPAR:inst4|comb~1              ; out0             ;
; |Block1|COMPAR:inst4|EQn~0               ; |Block1|COMPAR:inst4|EQn~0               ; out0             ;
; |Block1|COMPAR:inst4|EQn~1               ; |Block1|COMPAR:inst4|EQn~1               ; out0             ;
; |Block1|COMPAR:inst4|comb~5              ; |Block1|COMPAR:inst4|comb~5              ; out0             ;
; |Block1|COMPAR:inst4|EQn                 ; |Block1|COMPAR:inst4|EQn                 ; out              ;
; |Block1|PowerComputing:inst|WideOr0      ; |Block1|PowerComputing:inst|WideOr0      ; out0             ;
; |Block1|PowerComputing:inst|Y~0          ; |Block1|PowerComputing:inst|Y~0          ; out              ;
; |Block1|PowerComputing:inst|Y.S1         ; |Block1|PowerComputing:inst|Y.S1         ; regout           ;
; |Block1|PowerComputing:inst|Y.S2         ; |Block1|PowerComputing:inst|Y.S2         ; regout           ;
; |Block1|PowerComputing:inst|Y.S3         ; |Block1|PowerComputing:inst|Y.S3         ; regout           ;
; |Block1|PowerComputing:inst|StorReg_EN~0 ; |Block1|PowerComputing:inst|StorReg_EN~0 ; out              ;
; |Block1|PowerComputing:inst|StorReg_EN~2 ; |Block1|PowerComputing:inst|StorReg_EN~2 ; out0             ;
; |Block1|PowerComputing:inst|CTR_ENn      ; |Block1|PowerComputing:inst|CTR_ENn      ; out              ;
; |Block1|PowerComputing:inst|Y~1          ; |Block1|PowerComputing:inst|Y~1          ; out0             ;
; |Block1|PowerComputing:inst|VB_EN        ; |Block1|PowerComputing:inst|VB_EN        ; out0             ;
; |Block1|PowerComputing:inst|Y.S2~0       ; |Block1|PowerComputing:inst|Y.S2~0       ; out0             ;
; |Block1|PowerComputing:inst|WideOr0~1    ; |Block1|PowerComputing:inst|WideOr0~1    ; out0             ;
; |Block1|PowerComputing:inst|WideOr0~2    ; |Block1|PowerComputing:inst|WideOr0~2    ; out0             ;
; |Block1|PowerComputing:inst|Y~6          ; |Block1|PowerComputing:inst|Y~6          ; out0             ;
; |Block1|STOR_REG:inst10|Dout~0           ; |Block1|STOR_REG:inst10|Dout~0           ; out              ;
; |Block1|STOR_REG:inst10|Dout~1           ; |Block1|STOR_REG:inst10|Dout~1           ; out              ;
; |Block1|STOR_REG:inst10|Dout~2           ; |Block1|STOR_REG:inst10|Dout~2           ; out              ;
; |Block1|STOR_REG:inst10|Dout~3           ; |Block1|STOR_REG:inst10|Dout~3           ; out              ;
; |Block1|STOR_REG:inst10|Dout~4           ; |Block1|STOR_REG:inst10|Dout~4           ; out              ;
; |Block1|STOR_REG:inst10|Dout~5           ; |Block1|STOR_REG:inst10|Dout~5           ; out              ;
; |Block1|STOR_REG:inst10|Dout~6           ; |Block1|STOR_REG:inst10|Dout~6           ; out              ;
; |Block1|STOR_REG:inst10|Dout~7           ; |Block1|STOR_REG:inst10|Dout~7           ; out              ;
; |Block1|STOR_REG:inst10|Dout~8           ; |Block1|STOR_REG:inst10|Dout~8           ; out              ;
; |Block1|STOR_REG:inst10|Dout~9           ; |Block1|STOR_REG:inst10|Dout~9           ; out              ;
; |Block1|STOR_REG:inst10|Dout~10          ; |Block1|STOR_REG:inst10|Dout~10          ; out              ;
; |Block1|STOR_REG:inst10|Dout~11          ; |Block1|STOR_REG:inst10|Dout~11          ; out              ;
; |Block1|STOR_REG:inst10|Dout~12          ; |Block1|STOR_REG:inst10|Dout~12          ; out              ;
; |Block1|STOR_REG:inst10|Dout~13          ; |Block1|STOR_REG:inst10|Dout~13          ; out              ;
; |Block1|STOR_REG:inst10|Dout~14          ; |Block1|STOR_REG:inst10|Dout~14          ; out              ;
; |Block1|STOR_REG:inst10|Dout~15          ; |Block1|STOR_REG:inst10|Dout~15          ; out              ;
; |Block1|STOR_REG:inst10|Dout[0]          ; |Block1|STOR_REG:inst10|Dout[0]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[1]          ; |Block1|STOR_REG:inst10|Dout[1]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[2]          ; |Block1|STOR_REG:inst10|Dout[2]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[3]          ; |Block1|STOR_REG:inst10|Dout[3]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[4]          ; |Block1|STOR_REG:inst10|Dout[4]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[5]          ; |Block1|STOR_REG:inst10|Dout[5]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[6]          ; |Block1|STOR_REG:inst10|Dout[6]          ; regout           ;
; |Block1|STOR_REG:inst10|Dout[7]          ; |Block1|STOR_REG:inst10|Dout[7]          ; regout           ;
; |Block1|COMPAR:inst3|comb~2              ; |Block1|COMPAR:inst3|comb~2              ; out0             ;
; |Block1|COMPAR:inst3|comb~3              ; |Block1|COMPAR:inst3|comb~3              ; out0             ;
; |Block1|COMPAR:inst3|EQn~0               ; |Block1|COMPAR:inst3|EQn~0               ; out0             ;
; |Block1|COMPAR:inst3|EQn~1               ; |Block1|COMPAR:inst3|EQn~1               ; out0             ;
; |Block1|COMPAR:inst3|LTn                 ; |Block1|COMPAR:inst3|LTn                 ; out              ;
; |Block1|COMPAR:inst3|LTn~0               ; |Block1|COMPAR:inst3|LTn~0               ; out              ;
; |Block1|PowerComputing:inst|Selector1~0  ; |Block1|PowerComputing:inst|Selector1~0  ; out0             ;
; |Block1|PowerComputing:inst|Selector1~1  ; |Block1|PowerComputing:inst|Selector1~1  ; out0             ;
; |Block1|PowerComputing:inst|Selector1~2  ; |Block1|PowerComputing:inst|Selector1~2  ; out0             ;
; |Block1|PowerComputing:inst|Selector2~0  ; |Block1|PowerComputing:inst|Selector2~0  ; out0             ;
; |Block1|PowerComputing:inst|Selector2~1  ; |Block1|PowerComputing:inst|Selector2~1  ; out0             ;
; |Block1|PowerComputing:inst|Selector3~2  ; |Block1|PowerComputing:inst|Selector3~2  ; out0             ;
; |Block1|PowerComputing:inst|Selector4~1  ; |Block1|PowerComputing:inst|Selector4~1  ; out0             ;
; |Block1|PowerComputing:inst|Selector5~0  ; |Block1|PowerComputing:inst|Selector5~0  ; out0             ;
; |Block1|PowerComputing:inst|Selector5~1  ; |Block1|PowerComputing:inst|Selector5~1  ; out0             ;
; |Block1|PowerComputing:inst|Selector5~2  ; |Block1|PowerComputing:inst|Selector5~2  ; out0             ;
; |Block1|PowerComputing:inst|Selector6~0  ; |Block1|PowerComputing:inst|Selector6~0  ; out0             ;
; |Block1|PowerComputing:inst|Selector6~1  ; |Block1|PowerComputing:inst|Selector6~1  ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~0         ; |Block1|COMPAR:inst4|LessThan0~0         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~1         ; |Block1|COMPAR:inst4|LessThan0~1         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~2         ; |Block1|COMPAR:inst4|LessThan0~2         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~3         ; |Block1|COMPAR:inst4|LessThan0~3         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~4         ; |Block1|COMPAR:inst4|LessThan0~4         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~5         ; |Block1|COMPAR:inst4|LessThan0~5         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~6         ; |Block1|COMPAR:inst4|LessThan0~6         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~7         ; |Block1|COMPAR:inst4|LessThan0~7         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~8         ; |Block1|COMPAR:inst4|LessThan0~8         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~9         ; |Block1|COMPAR:inst4|LessThan0~9         ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~10        ; |Block1|COMPAR:inst4|LessThan0~10        ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~11        ; |Block1|COMPAR:inst4|LessThan0~11        ; out0             ;
; |Block1|COMPAR:inst4|LessThan0~12        ; |Block1|COMPAR:inst4|LessThan0~12        ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~0         ; |Block1|COMPAR:inst3|LessThan0~0         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~1         ; |Block1|COMPAR:inst3|LessThan0~1         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~2         ; |Block1|COMPAR:inst3|LessThan0~2         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~3         ; |Block1|COMPAR:inst3|LessThan0~3         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~4         ; |Block1|COMPAR:inst3|LessThan0~4         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~5         ; |Block1|COMPAR:inst3|LessThan0~5         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~6         ; |Block1|COMPAR:inst3|LessThan0~6         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~7         ; |Block1|COMPAR:inst3|LessThan0~7         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~8         ; |Block1|COMPAR:inst3|LessThan0~8         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~9         ; |Block1|COMPAR:inst3|LessThan0~9         ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~10        ; |Block1|COMPAR:inst3|LessThan0~10        ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~11        ; |Block1|COMPAR:inst3|LessThan0~11        ; out0             ;
; |Block1|COMPAR:inst3|LessThan0~12        ; |Block1|COMPAR:inst3|LessThan0~12        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~0          ; |Block1|COUNTER16:inst20|Add0~0          ; out0             ;
; |Block1|COUNTER16:inst20|Add0~1          ; |Block1|COUNTER16:inst20|Add0~1          ; out0             ;
; |Block1|COUNTER16:inst20|Add0~2          ; |Block1|COUNTER16:inst20|Add0~2          ; out0             ;
; |Block1|COUNTER16:inst20|Add0~3          ; |Block1|COUNTER16:inst20|Add0~3          ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~0             ; |Block1|ADD_SUB:inst1|Add0~0             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~1             ; |Block1|ADD_SUB:inst1|Add0~1             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~2             ; |Block1|ADD_SUB:inst1|Add0~2             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~3             ; |Block1|ADD_SUB:inst1|Add0~3             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~4             ; |Block1|ADD_SUB:inst1|Add0~4             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~5             ; |Block1|ADD_SUB:inst1|Add0~5             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~6             ; |Block1|ADD_SUB:inst1|Add0~6             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~7             ; |Block1|ADD_SUB:inst1|Add0~7             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~8             ; |Block1|ADD_SUB:inst1|Add0~8             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~9             ; |Block1|ADD_SUB:inst1|Add0~9             ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~10            ; |Block1|ADD_SUB:inst1|Add0~10            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~11            ; |Block1|ADD_SUB:inst1|Add0~11            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~12            ; |Block1|ADD_SUB:inst1|Add0~12            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~13            ; |Block1|ADD_SUB:inst1|Add0~13            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~16            ; |Block1|ADD_SUB:inst1|Add0~16            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~17            ; |Block1|ADD_SUB:inst1|Add0~17            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~18            ; |Block1|ADD_SUB:inst1|Add0~18            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~21            ; |Block1|ADD_SUB:inst1|Add0~21            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~22            ; |Block1|ADD_SUB:inst1|Add0~22            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~23            ; |Block1|ADD_SUB:inst1|Add0~23            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~26            ; |Block1|ADD_SUB:inst1|Add0~26            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~27            ; |Block1|ADD_SUB:inst1|Add0~27            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~28            ; |Block1|ADD_SUB:inst1|Add0~28            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~31            ; |Block1|ADD_SUB:inst1|Add0~31            ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~32            ; |Block1|ADD_SUB:inst1|Add0~32            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~0             ; |Block1|ADD_SUB:inst1|Add1~0             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~1             ; |Block1|ADD_SUB:inst1|Add1~1             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~3             ; |Block1|ADD_SUB:inst1|Add1~3             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~4             ; |Block1|ADD_SUB:inst1|Add1~4             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~5             ; |Block1|ADD_SUB:inst1|Add1~5             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~8             ; |Block1|ADD_SUB:inst1|Add1~8             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~9             ; |Block1|ADD_SUB:inst1|Add1~9             ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~10            ; |Block1|ADD_SUB:inst1|Add1~10            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~13            ; |Block1|ADD_SUB:inst1|Add1~13            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~14            ; |Block1|ADD_SUB:inst1|Add1~14            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~15            ; |Block1|ADD_SUB:inst1|Add1~15            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~16            ; |Block1|ADD_SUB:inst1|Add1~16            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~17            ; |Block1|ADD_SUB:inst1|Add1~17            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~18            ; |Block1|ADD_SUB:inst1|Add1~18            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~19            ; |Block1|ADD_SUB:inst1|Add1~19            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~20            ; |Block1|ADD_SUB:inst1|Add1~20            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~21            ; |Block1|ADD_SUB:inst1|Add1~21            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~22            ; |Block1|ADD_SUB:inst1|Add1~22            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~23            ; |Block1|ADD_SUB:inst1|Add1~23            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~24            ; |Block1|ADD_SUB:inst1|Add1~24            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~25            ; |Block1|ADD_SUB:inst1|Add1~25            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~26            ; |Block1|ADD_SUB:inst1|Add1~26            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~27            ; |Block1|ADD_SUB:inst1|Add1~27            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~28            ; |Block1|ADD_SUB:inst1|Add1~28            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~29            ; |Block1|ADD_SUB:inst1|Add1~29            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~30            ; |Block1|ADD_SUB:inst1|Add1~30            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~31            ; |Block1|ADD_SUB:inst1|Add1~31            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~32            ; |Block1|ADD_SUB:inst1|Add1~32            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~33            ; |Block1|ADD_SUB:inst1|Add1~33            ; out0             ;
; |Block1|COMPAR:inst4|Equal0~0            ; |Block1|COMPAR:inst4|Equal0~0            ; out0             ;
+------------------------------------------+------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                   ;
+--------------------------------------------+--------------------------------------------+------------------+
; Node Name                                  ; Output Port Name                           ; Output Port Type ;
+--------------------------------------------+--------------------------------------------+------------------+
; |Block1|VOLTS[7]                           ; |Block1|VOLTS[7]                           ; out              ;
; |Block1|VOLTS[6]                           ; |Block1|VOLTS[6]                           ; out              ;
; |Block1|VOLTS[5]                           ; |Block1|VOLTS[5]                           ; out              ;
; |Block1|VOLTS[4]                           ; |Block1|VOLTS[4]                           ; out              ;
; |Block1|VOLTS[3]                           ; |Block1|VOLTS[3]                           ; out              ;
; |Block1|VOLTS[2]                           ; |Block1|VOLTS[2]                           ; out              ;
; |Block1|VOLTS[1]                           ; |Block1|VOLTS[1]                           ; out              ;
; |Block1|VOLTS[0]                           ; |Block1|VOLTS[0]                           ; out              ;
; |Block1|REST[7]                            ; |Block1|REST[7]                            ; out              ;
; |Block1|REST[6]                            ; |Block1|REST[6]                            ; out              ;
; |Block1|REST[5]                            ; |Block1|REST[5]                            ; out              ;
; |Block1|REST[4]                            ; |Block1|REST[4]                            ; out              ;
; |Block1|REST[3]                            ; |Block1|REST[3]                            ; out              ;
; |Block1|REST[2]                            ; |Block1|REST[2]                            ; out              ;
; |Block1|REST[1]                            ; |Block1|REST[1]                            ; out              ;
; |Block1|REST[0]                            ; |Block1|REST[0]                            ; out              ;
; |Block1|VA_LD                              ; |Block1|VA_LD                              ; pin_out          ;
; |Block1|VB_LD                              ; |Block1|VB_LD                              ; pin_out          ;
; |Block1|MAGNITUDE[7]                       ; |Block1|MAGNITUDE[7]                       ; pin_out          ;
; |Block1|MAGNITUDE[6]                       ; |Block1|MAGNITUDE[6]                       ; pin_out          ;
; |Block1|MAGNITUDE[5]                       ; |Block1|MAGNITUDE[5]                       ; pin_out          ;
; |Block1|MAGNITUDE[4]                       ; |Block1|MAGNITUDE[4]                       ; pin_out          ;
; |Block1|MAGNITUDE[3]                       ; |Block1|MAGNITUDE[3]                       ; pin_out          ;
; |Block1|MAGNITUDE[2]                       ; |Block1|MAGNITUDE[2]                       ; pin_out          ;
; |Block1|MAGNITUDE[1]                       ; |Block1|MAGNITUDE[1]                       ; pin_out          ;
; |Block1|MAGNITUDE[0]                       ; |Block1|MAGNITUDE[0]                       ; pin_out          ;
; |Block1|POWER[15]                          ; |Block1|POWER[15]                          ; pin_out          ;
; |Block1|POWER[14]                          ; |Block1|POWER[14]                          ; pin_out          ;
; |Block1|POWER[13]                          ; |Block1|POWER[13]                          ; pin_out          ;
; |Block1|POWER[12]                          ; |Block1|POWER[12]                          ; pin_out          ;
; |Block1|POWER[11]                          ; |Block1|POWER[11]                          ; pin_out          ;
; |Block1|POWER[10]                          ; |Block1|POWER[10]                          ; pin_out          ;
; |Block1|POWER[9]                           ; |Block1|POWER[9]                           ; pin_out          ;
; |Block1|POWER[8]                           ; |Block1|POWER[8]                           ; pin_out          ;
; |Block1|POWER[7]                           ; |Block1|POWER[7]                           ; pin_out          ;
; |Block1|POWER[6]                           ; |Block1|POWER[6]                           ; pin_out          ;
; |Block1|POWER[5]                           ; |Block1|POWER[5]                           ; pin_out          ;
; |Block1|POWER[4]                           ; |Block1|POWER[4]                           ; pin_out          ;
; |Block1|V_MSB[7]                           ; |Block1|V_MSB[7]                           ; pin_out          ;
; |Block1|VA[2]                              ; |Block1|VA[2]                              ; pin_out          ;
; |Block1|VA[1]                              ; |Block1|VA[1]                              ; pin_out          ;
; |Block1|VA[0]                              ; |Block1|VA[0]                              ; pin_out          ;
; |Block1|VB[7]                              ; |Block1|VB[7]                              ; pin_out          ;
; |Block1|VB[6]                              ; |Block1|VB[6]                              ; pin_out          ;
; |Block1|VB[5]                              ; |Block1|VB[5]                              ; pin_out          ;
; |Block1|VB[4]                              ; |Block1|VB[4]                              ; pin_out          ;
; |Block1|COUNTER16:inst20|TEMP~16           ; |Block1|COUNTER16:inst20|TEMP~16           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~17           ; |Block1|COUNTER16:inst20|TEMP~17           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~18           ; |Block1|COUNTER16:inst20|TEMP~18           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~19           ; |Block1|COUNTER16:inst20|TEMP~19           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~20           ; |Block1|COUNTER16:inst20|TEMP~20           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~21           ; |Block1|COUNTER16:inst20|TEMP~21           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~22           ; |Block1|COUNTER16:inst20|TEMP~22           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~23           ; |Block1|COUNTER16:inst20|TEMP~23           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~24           ; |Block1|COUNTER16:inst20|TEMP~24           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~25           ; |Block1|COUNTER16:inst20|TEMP~25           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~26           ; |Block1|COUNTER16:inst20|TEMP~26           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~27           ; |Block1|COUNTER16:inst20|TEMP~27           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~32           ; |Block1|COUNTER16:inst20|TEMP~32           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~33           ; |Block1|COUNTER16:inst20|TEMP~33           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~34           ; |Block1|COUNTER16:inst20|TEMP~34           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~35           ; |Block1|COUNTER16:inst20|TEMP~35           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~36           ; |Block1|COUNTER16:inst20|TEMP~36           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~37           ; |Block1|COUNTER16:inst20|TEMP~37           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~38           ; |Block1|COUNTER16:inst20|TEMP~38           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~39           ; |Block1|COUNTER16:inst20|TEMP~39           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~40           ; |Block1|COUNTER16:inst20|TEMP~40           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~41           ; |Block1|COUNTER16:inst20|TEMP~41           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~42           ; |Block1|COUNTER16:inst20|TEMP~42           ; out              ;
; |Block1|COUNTER16:inst20|TEMP~43           ; |Block1|COUNTER16:inst20|TEMP~43           ; out              ;
; |Block1|COUNTER16:inst20|TEMP[4]           ; |Block1|COUNTER16:inst20|TEMP[4]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[5]           ; |Block1|COUNTER16:inst20|TEMP[5]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[6]           ; |Block1|COUNTER16:inst20|TEMP[6]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[7]           ; |Block1|COUNTER16:inst20|TEMP[7]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[8]           ; |Block1|COUNTER16:inst20|TEMP[8]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[9]           ; |Block1|COUNTER16:inst20|TEMP[9]           ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[10]          ; |Block1|COUNTER16:inst20|TEMP[10]          ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[11]          ; |Block1|COUNTER16:inst20|TEMP[11]          ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[12]          ; |Block1|COUNTER16:inst20|TEMP[12]          ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[13]          ; |Block1|COUNTER16:inst20|TEMP[13]          ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[14]          ; |Block1|COUNTER16:inst20|TEMP[14]          ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[15]          ; |Block1|COUNTER16:inst20|TEMP[15]          ; regout           ;
; |Block1|SHIFT:inst9|TEMPout~12             ; |Block1|SHIFT:inst9|TEMPout~12             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~13             ; |Block1|SHIFT:inst9|TEMPout~13             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~14             ; |Block1|SHIFT:inst9|TEMPout~14             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~15             ; |Block1|SHIFT:inst9|TEMPout~15             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~28             ; |Block1|SHIFT:inst9|TEMPout~28             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~29             ; |Block1|SHIFT:inst9|TEMPout~29             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~30             ; |Block1|SHIFT:inst9|TEMPout~30             ; out              ;
; |Block1|SHIFT:inst9|TEMPout~31             ; |Block1|SHIFT:inst9|TEMPout~31             ; out              ;
; |Block1|SHIFT:inst9|TEMPout[0]             ; |Block1|SHIFT:inst9|TEMPout[0]             ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[1]             ; |Block1|SHIFT:inst9|TEMPout[1]             ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[2]             ; |Block1|SHIFT:inst9|TEMPout[2]             ; regout           ;
; |Block1|MUX:inst7|Dout[7]                  ; |Block1|MUX:inst7|Dout[7]                  ; out              ;
; |Block1|MUX:inst7|Dout[6]                  ; |Block1|MUX:inst7|Dout[6]                  ; out              ;
; |Block1|MUX:inst7|Dout[5]                  ; |Block1|MUX:inst7|Dout[5]                  ; out              ;
; |Block1|MUX:inst7|Dout[4]                  ; |Block1|MUX:inst7|Dout[4]                  ; out              ;
; |Block1|MUX:inst7|Dout[3]                  ; |Block1|MUX:inst7|Dout[3]                  ; out              ;
; |Block1|MUX:inst7|Dout[2]                  ; |Block1|MUX:inst7|Dout[2]                  ; out              ;
; |Block1|MUX:inst7|Dout[1]                  ; |Block1|MUX:inst7|Dout[1]                  ; out              ;
; |Block1|SHIFT:inst8|TEMPout~8              ; |Block1|SHIFT:inst8|TEMPout~8              ; out              ;
; |Block1|SHIFT:inst8|TEMPout~9              ; |Block1|SHIFT:inst8|TEMPout~9              ; out              ;
; |Block1|SHIFT:inst8|TEMPout~10             ; |Block1|SHIFT:inst8|TEMPout~10             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~11             ; |Block1|SHIFT:inst8|TEMPout~11             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~12             ; |Block1|SHIFT:inst8|TEMPout~12             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~24             ; |Block1|SHIFT:inst8|TEMPout~24             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~25             ; |Block1|SHIFT:inst8|TEMPout~25             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~26             ; |Block1|SHIFT:inst8|TEMPout~26             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~27             ; |Block1|SHIFT:inst8|TEMPout~27             ; out              ;
; |Block1|SHIFT:inst8|TEMPout~28             ; |Block1|SHIFT:inst8|TEMPout~28             ; out              ;
; |Block1|SHIFT:inst8|TEMPout[4]             ; |Block1|SHIFT:inst8|TEMPout[4]             ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[5]             ; |Block1|SHIFT:inst8|TEMPout[5]             ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[6]             ; |Block1|SHIFT:inst8|TEMPout[6]             ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[7]             ; |Block1|SHIFT:inst8|TEMPout[7]             ; regout           ;
; |Block1|PowerComputing:inst|Y.S0           ; |Block1|PowerComputing:inst|Y.S0           ; regout           ;
; |Block1|PowerComputing:inst|VA_LD          ; |Block1|PowerComputing:inst|VA_LD          ; out              ;
; |Block1|PowerComputing:inst|VB_LD          ; |Block1|PowerComputing:inst|VB_LD          ; out              ;
; |Block1|PowerComputing:inst|Y~2            ; |Block1|PowerComputing:inst|Y~2            ; out0             ;
; |Block1|PowerComputing:inst|StorReg_CLRn~0 ; |Block1|PowerComputing:inst|StorReg_CLRn~0 ; out0             ;
; |Block1|PowerComputing:inst|Y~10           ; |Block1|PowerComputing:inst|Y~10           ; out0             ;
; |Block1|PowerComputing:inst|Selector0~0    ; |Block1|PowerComputing:inst|Selector0~0    ; out0             ;
; |Block1|COUNTER16:inst20|Add0~5            ; |Block1|COUNTER16:inst20|Add0~5            ; out0             ;
; |Block1|COUNTER16:inst20|Add0~6            ; |Block1|COUNTER16:inst20|Add0~6            ; out0             ;
; |Block1|COUNTER16:inst20|Add0~7            ; |Block1|COUNTER16:inst20|Add0~7            ; out0             ;
; |Block1|COUNTER16:inst20|Add0~8            ; |Block1|COUNTER16:inst20|Add0~8            ; out0             ;
; |Block1|COUNTER16:inst20|Add0~9            ; |Block1|COUNTER16:inst20|Add0~9            ; out0             ;
; |Block1|COUNTER16:inst20|Add0~10           ; |Block1|COUNTER16:inst20|Add0~10           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~11           ; |Block1|COUNTER16:inst20|Add0~11           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~12           ; |Block1|COUNTER16:inst20|Add0~12           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~13           ; |Block1|COUNTER16:inst20|Add0~13           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~14           ; |Block1|COUNTER16:inst20|Add0~14           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~15           ; |Block1|COUNTER16:inst20|Add0~15           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~16           ; |Block1|COUNTER16:inst20|Add0~16           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~17           ; |Block1|COUNTER16:inst20|Add0~17           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~18           ; |Block1|COUNTER16:inst20|Add0~18           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~19           ; |Block1|COUNTER16:inst20|Add0~19           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~20           ; |Block1|COUNTER16:inst20|Add0~20           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~21           ; |Block1|COUNTER16:inst20|Add0~21           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~22           ; |Block1|COUNTER16:inst20|Add0~22           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~23           ; |Block1|COUNTER16:inst20|Add0~23           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~24           ; |Block1|COUNTER16:inst20|Add0~24           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~25           ; |Block1|COUNTER16:inst20|Add0~25           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~26           ; |Block1|COUNTER16:inst20|Add0~26           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~27           ; |Block1|COUNTER16:inst20|Add0~27           ; out0             ;
; |Block1|COUNTER16:inst20|Add0~28           ; |Block1|COUNTER16:inst20|Add0~28           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~14              ; |Block1|ADD_SUB:inst1|Add0~14              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~15              ; |Block1|ADD_SUB:inst1|Add0~15              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~19              ; |Block1|ADD_SUB:inst1|Add0~19              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~20              ; |Block1|ADD_SUB:inst1|Add0~20              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~24              ; |Block1|ADD_SUB:inst1|Add0~24              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~25              ; |Block1|ADD_SUB:inst1|Add0~25              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~29              ; |Block1|ADD_SUB:inst1|Add0~29              ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~30              ; |Block1|ADD_SUB:inst1|Add0~30              ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~2               ; |Block1|ADD_SUB:inst1|Add1~2               ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~6               ; |Block1|ADD_SUB:inst1|Add1~6               ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~7               ; |Block1|ADD_SUB:inst1|Add1~7               ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~11              ; |Block1|ADD_SUB:inst1|Add1~11              ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~12              ; |Block1|ADD_SUB:inst1|Add1~12              ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~0          ; |Block1|ADD_SUB_BIT:inst11|Add0~0          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~1          ; |Block1|ADD_SUB_BIT:inst11|Add0~1          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~2          ; |Block1|ADD_SUB_BIT:inst11|Add0~2          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~3          ; |Block1|ADD_SUB_BIT:inst11|Add0~3          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~4          ; |Block1|ADD_SUB_BIT:inst11|Add0~4          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~5          ; |Block1|ADD_SUB_BIT:inst11|Add0~5          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~6          ; |Block1|ADD_SUB_BIT:inst11|Add0~6          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~7          ; |Block1|ADD_SUB_BIT:inst11|Add0~7          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~8          ; |Block1|ADD_SUB_BIT:inst11|Add0~8          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~9          ; |Block1|ADD_SUB_BIT:inst11|Add0~9          ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~10         ; |Block1|ADD_SUB_BIT:inst11|Add0~10         ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~11         ; |Block1|ADD_SUB_BIT:inst11|Add0~11         ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~12         ; |Block1|ADD_SUB_BIT:inst11|Add0~12         ; out0             ;
; |Block1|COMPAR:inst3|Equal0~0              ; |Block1|COMPAR:inst3|Equal0~0              ; out0             ;
+--------------------------------------------+--------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                             ;
+-----------------------------------------+-----------------------------------------+------------------+
; Node Name                               ; Output Port Name                        ; Output Port Type ;
+-----------------------------------------+-----------------------------------------+------------------+
; |Block1|RESETn                          ; |Block1|RESETn                          ; out              ;
; |Block1|S                               ; |Block1|S                               ; out              ;
; |Block1|VOLTS[7]                        ; |Block1|VOLTS[7]                        ; out              ;
; |Block1|VOLTS[6]                        ; |Block1|VOLTS[6]                        ; out              ;
; |Block1|VOLTS[5]                        ; |Block1|VOLTS[5]                        ; out              ;
; |Block1|VOLTS[4]                        ; |Block1|VOLTS[4]                        ; out              ;
; |Block1|VOLTS[3]                        ; |Block1|VOLTS[3]                        ; out              ;
; |Block1|VOLTS[2]                        ; |Block1|VOLTS[2]                        ; out              ;
; |Block1|VOLTS[1]                        ; |Block1|VOLTS[1]                        ; out              ;
; |Block1|VOLTS[0]                        ; |Block1|VOLTS[0]                        ; out              ;
; |Block1|REST[7]                         ; |Block1|REST[7]                         ; out              ;
; |Block1|REST[6]                         ; |Block1|REST[6]                         ; out              ;
; |Block1|REST[5]                         ; |Block1|REST[5]                         ; out              ;
; |Block1|REST[4]                         ; |Block1|REST[4]                         ; out              ;
; |Block1|REST[3]                         ; |Block1|REST[3]                         ; out              ;
; |Block1|REST[2]                         ; |Block1|REST[2]                         ; out              ;
; |Block1|REST[1]                         ; |Block1|REST[1]                         ; out              ;
; |Block1|REST[0]                         ; |Block1|REST[0]                         ; out              ;
; |Block1|DONE                            ; |Block1|DONE                            ; pin_out          ;
; |Block1|V_DONE                          ; |Block1|V_DONE                          ; pin_out          ;
; |Block1|StoreReg_CLRn                   ; |Block1|StoreReg_CLRn                   ; pin_out          ;
; |Block1|MAGNITUDE[7]                    ; |Block1|MAGNITUDE[7]                    ; pin_out          ;
; |Block1|MAGNITUDE[6]                    ; |Block1|MAGNITUDE[6]                    ; pin_out          ;
; |Block1|MAGNITUDE[5]                    ; |Block1|MAGNITUDE[5]                    ; pin_out          ;
; |Block1|MAGNITUDE[4]                    ; |Block1|MAGNITUDE[4]                    ; pin_out          ;
; |Block1|MAGNITUDE[3]                    ; |Block1|MAGNITUDE[3]                    ; pin_out          ;
; |Block1|MAGNITUDE[2]                    ; |Block1|MAGNITUDE[2]                    ; pin_out          ;
; |Block1|MAGNITUDE[1]                    ; |Block1|MAGNITUDE[1]                    ; pin_out          ;
; |Block1|MAGNITUDE[0]                    ; |Block1|MAGNITUDE[0]                    ; pin_out          ;
; |Block1|MUX[2]                          ; |Block1|MUX[2]                          ; pin_out          ;
; |Block1|MUX[1]                          ; |Block1|MUX[1]                          ; pin_out          ;
; |Block1|MUX[0]                          ; |Block1|MUX[0]                          ; pin_out          ;
; |Block1|POWER[15]                       ; |Block1|POWER[15]                       ; pin_out          ;
; |Block1|POWER[14]                       ; |Block1|POWER[14]                       ; pin_out          ;
; |Block1|POWER[13]                       ; |Block1|POWER[13]                       ; pin_out          ;
; |Block1|POWER[12]                       ; |Block1|POWER[12]                       ; pin_out          ;
; |Block1|POWER[11]                       ; |Block1|POWER[11]                       ; pin_out          ;
; |Block1|POWER[10]                       ; |Block1|POWER[10]                       ; pin_out          ;
; |Block1|POWER[9]                        ; |Block1|POWER[9]                        ; pin_out          ;
; |Block1|POWER[8]                        ; |Block1|POWER[8]                        ; pin_out          ;
; |Block1|POWER[7]                        ; |Block1|POWER[7]                        ; pin_out          ;
; |Block1|POWER[6]                        ; |Block1|POWER[6]                        ; pin_out          ;
; |Block1|POWER[5]                        ; |Block1|POWER[5]                        ; pin_out          ;
; |Block1|POWER[4]                        ; |Block1|POWER[4]                        ; pin_out          ;
; |Block1|POWER[3]                        ; |Block1|POWER[3]                        ; pin_out          ;
; |Block1|V_MSB[7]                        ; |Block1|V_MSB[7]                        ; pin_out          ;
; |Block1|VA[2]                           ; |Block1|VA[2]                           ; pin_out          ;
; |Block1|VA[1]                           ; |Block1|VA[1]                           ; pin_out          ;
; |Block1|VA[0]                           ; |Block1|VA[0]                           ; pin_out          ;
; |Block1|VB[7]                           ; |Block1|VB[7]                           ; pin_out          ;
; |Block1|VB[6]                           ; |Block1|VB[6]                           ; pin_out          ;
; |Block1|VB[5]                           ; |Block1|VB[5]                           ; pin_out          ;
; |Block1|VB[4]                           ; |Block1|VB[4]                           ; pin_out          ;
; |Block1|COUNTER16:inst20|TEMP~16        ; |Block1|COUNTER16:inst20|TEMP~16        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~17        ; |Block1|COUNTER16:inst20|TEMP~17        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~18        ; |Block1|COUNTER16:inst20|TEMP~18        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~19        ; |Block1|COUNTER16:inst20|TEMP~19        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~20        ; |Block1|COUNTER16:inst20|TEMP~20        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~21        ; |Block1|COUNTER16:inst20|TEMP~21        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~22        ; |Block1|COUNTER16:inst20|TEMP~22        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~23        ; |Block1|COUNTER16:inst20|TEMP~23        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~24        ; |Block1|COUNTER16:inst20|TEMP~24        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~25        ; |Block1|COUNTER16:inst20|TEMP~25        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~26        ; |Block1|COUNTER16:inst20|TEMP~26        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~27        ; |Block1|COUNTER16:inst20|TEMP~27        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~28        ; |Block1|COUNTER16:inst20|TEMP~28        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~32        ; |Block1|COUNTER16:inst20|TEMP~32        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~33        ; |Block1|COUNTER16:inst20|TEMP~33        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~34        ; |Block1|COUNTER16:inst20|TEMP~34        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~35        ; |Block1|COUNTER16:inst20|TEMP~35        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~36        ; |Block1|COUNTER16:inst20|TEMP~36        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~37        ; |Block1|COUNTER16:inst20|TEMP~37        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~38        ; |Block1|COUNTER16:inst20|TEMP~38        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~39        ; |Block1|COUNTER16:inst20|TEMP~39        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~40        ; |Block1|COUNTER16:inst20|TEMP~40        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~41        ; |Block1|COUNTER16:inst20|TEMP~41        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~42        ; |Block1|COUNTER16:inst20|TEMP~42        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~43        ; |Block1|COUNTER16:inst20|TEMP~43        ; out              ;
; |Block1|COUNTER16:inst20|TEMP~44        ; |Block1|COUNTER16:inst20|TEMP~44        ; out              ;
; |Block1|COUNTER16:inst20|TEMP[3]        ; |Block1|COUNTER16:inst20|TEMP[3]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[4]        ; |Block1|COUNTER16:inst20|TEMP[4]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[5]        ; |Block1|COUNTER16:inst20|TEMP[5]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[6]        ; |Block1|COUNTER16:inst20|TEMP[6]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[7]        ; |Block1|COUNTER16:inst20|TEMP[7]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[8]        ; |Block1|COUNTER16:inst20|TEMP[8]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[9]        ; |Block1|COUNTER16:inst20|TEMP[9]        ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[10]       ; |Block1|COUNTER16:inst20|TEMP[10]       ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[11]       ; |Block1|COUNTER16:inst20|TEMP[11]       ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[12]       ; |Block1|COUNTER16:inst20|TEMP[12]       ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[13]       ; |Block1|COUNTER16:inst20|TEMP[13]       ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[14]       ; |Block1|COUNTER16:inst20|TEMP[14]       ; regout           ;
; |Block1|COUNTER16:inst20|TEMP[15]       ; |Block1|COUNTER16:inst20|TEMP[15]       ; regout           ;
; |Block1|SHIFT:inst9|TEMPout~13          ; |Block1|SHIFT:inst9|TEMPout~13          ; out              ;
; |Block1|SHIFT:inst9|TEMPout~14          ; |Block1|SHIFT:inst9|TEMPout~14          ; out              ;
; |Block1|SHIFT:inst9|TEMPout~15          ; |Block1|SHIFT:inst9|TEMPout~15          ; out              ;
; |Block1|SHIFT:inst9|TEMPout~29          ; |Block1|SHIFT:inst9|TEMPout~29          ; out              ;
; |Block1|SHIFT:inst9|TEMPout~30          ; |Block1|SHIFT:inst9|TEMPout~30          ; out              ;
; |Block1|SHIFT:inst9|TEMPout~31          ; |Block1|SHIFT:inst9|TEMPout~31          ; out              ;
; |Block1|SHIFT:inst9|TEMPout[0]          ; |Block1|SHIFT:inst9|TEMPout[0]          ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[1]          ; |Block1|SHIFT:inst9|TEMPout[1]          ; regout           ;
; |Block1|SHIFT:inst9|TEMPout[2]          ; |Block1|SHIFT:inst9|TEMPout[2]          ; regout           ;
; |Block1|MUX:inst6|Dout[2]               ; |Block1|MUX:inst6|Dout[2]               ; out              ;
; |Block1|MUX:inst6|Dout[1]               ; |Block1|MUX:inst6|Dout[1]               ; out              ;
; |Block1|MUX:inst6|Dout[0]               ; |Block1|MUX:inst6|Dout[0]               ; out              ;
; |Block1|MUX:inst7|Dout[7]               ; |Block1|MUX:inst7|Dout[7]               ; out              ;
; |Block1|MUX:inst7|Dout[6]               ; |Block1|MUX:inst7|Dout[6]               ; out              ;
; |Block1|MUX:inst7|Dout[5]               ; |Block1|MUX:inst7|Dout[5]               ; out              ;
; |Block1|MUX:inst7|Dout[4]               ; |Block1|MUX:inst7|Dout[4]               ; out              ;
; |Block1|MUX:inst7|Dout[3]               ; |Block1|MUX:inst7|Dout[3]               ; out              ;
; |Block1|MUX:inst7|Dout[2]               ; |Block1|MUX:inst7|Dout[2]               ; out              ;
; |Block1|MUX:inst7|Dout[1]               ; |Block1|MUX:inst7|Dout[1]               ; out              ;
; |Block1|SHIFT:inst8|TEMPout~8           ; |Block1|SHIFT:inst8|TEMPout~8           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~9           ; |Block1|SHIFT:inst8|TEMPout~9           ; out              ;
; |Block1|SHIFT:inst8|TEMPout~10          ; |Block1|SHIFT:inst8|TEMPout~10          ; out              ;
; |Block1|SHIFT:inst8|TEMPout~11          ; |Block1|SHIFT:inst8|TEMPout~11          ; out              ;
; |Block1|SHIFT:inst8|TEMPout~24          ; |Block1|SHIFT:inst8|TEMPout~24          ; out              ;
; |Block1|SHIFT:inst8|TEMPout~25          ; |Block1|SHIFT:inst8|TEMPout~25          ; out              ;
; |Block1|SHIFT:inst8|TEMPout~26          ; |Block1|SHIFT:inst8|TEMPout~26          ; out              ;
; |Block1|SHIFT:inst8|TEMPout~27          ; |Block1|SHIFT:inst8|TEMPout~27          ; out              ;
; |Block1|SHIFT:inst8|TEMPout[4]          ; |Block1|SHIFT:inst8|TEMPout[4]          ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[5]          ; |Block1|SHIFT:inst8|TEMPout[5]          ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[6]          ; |Block1|SHIFT:inst8|TEMPout[6]          ; regout           ;
; |Block1|SHIFT:inst8|TEMPout[7]          ; |Block1|SHIFT:inst8|TEMPout[7]          ; regout           ;
; |Block1|PowerComputing:inst|Y.S4        ; |Block1|PowerComputing:inst|Y.S4        ; regout           ;
; |Block1|PowerComputing:inst|WideOr3     ; |Block1|PowerComputing:inst|WideOr3     ; out0             ;
; |Block1|PowerComputing:inst|DONE        ; |Block1|PowerComputing:inst|DONE        ; out0             ;
; |Block1|PowerComputing:inst|Selector3~0 ; |Block1|PowerComputing:inst|Selector3~0 ; out0             ;
; |Block1|PowerComputing:inst|Selector3~1 ; |Block1|PowerComputing:inst|Selector3~1 ; out0             ;
; |Block1|PowerComputing:inst|Selector4~0 ; |Block1|PowerComputing:inst|Selector4~0 ; out0             ;
; |Block1|COUNTER16:inst20|Add0~4         ; |Block1|COUNTER16:inst20|Add0~4         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~5         ; |Block1|COUNTER16:inst20|Add0~5         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~6         ; |Block1|COUNTER16:inst20|Add0~6         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~7         ; |Block1|COUNTER16:inst20|Add0~7         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~8         ; |Block1|COUNTER16:inst20|Add0~8         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~9         ; |Block1|COUNTER16:inst20|Add0~9         ; out0             ;
; |Block1|COUNTER16:inst20|Add0~10        ; |Block1|COUNTER16:inst20|Add0~10        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~11        ; |Block1|COUNTER16:inst20|Add0~11        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~12        ; |Block1|COUNTER16:inst20|Add0~12        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~13        ; |Block1|COUNTER16:inst20|Add0~13        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~14        ; |Block1|COUNTER16:inst20|Add0~14        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~15        ; |Block1|COUNTER16:inst20|Add0~15        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~16        ; |Block1|COUNTER16:inst20|Add0~16        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~17        ; |Block1|COUNTER16:inst20|Add0~17        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~18        ; |Block1|COUNTER16:inst20|Add0~18        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~19        ; |Block1|COUNTER16:inst20|Add0~19        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~20        ; |Block1|COUNTER16:inst20|Add0~20        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~21        ; |Block1|COUNTER16:inst20|Add0~21        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~22        ; |Block1|COUNTER16:inst20|Add0~22        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~23        ; |Block1|COUNTER16:inst20|Add0~23        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~24        ; |Block1|COUNTER16:inst20|Add0~24        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~25        ; |Block1|COUNTER16:inst20|Add0~25        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~26        ; |Block1|COUNTER16:inst20|Add0~26        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~27        ; |Block1|COUNTER16:inst20|Add0~27        ; out0             ;
; |Block1|COUNTER16:inst20|Add0~28        ; |Block1|COUNTER16:inst20|Add0~28        ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~14           ; |Block1|ADD_SUB:inst1|Add0~14           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~15           ; |Block1|ADD_SUB:inst1|Add0~15           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~19           ; |Block1|ADD_SUB:inst1|Add0~19           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~20           ; |Block1|ADD_SUB:inst1|Add0~20           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~24           ; |Block1|ADD_SUB:inst1|Add0~24           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~25           ; |Block1|ADD_SUB:inst1|Add0~25           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~29           ; |Block1|ADD_SUB:inst1|Add0~29           ; out0             ;
; |Block1|ADD_SUB:inst1|Add0~30           ; |Block1|ADD_SUB:inst1|Add0~30           ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~2            ; |Block1|ADD_SUB:inst1|Add1~2            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~6            ; |Block1|ADD_SUB:inst1|Add1~6            ; out0             ;
; |Block1|ADD_SUB:inst1|Add1~11           ; |Block1|ADD_SUB:inst1|Add1~11           ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~0       ; |Block1|ADD_SUB_BIT:inst11|Add0~0       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~1       ; |Block1|ADD_SUB_BIT:inst11|Add0~1       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~2       ; |Block1|ADD_SUB_BIT:inst11|Add0~2       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~3       ; |Block1|ADD_SUB_BIT:inst11|Add0~3       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~4       ; |Block1|ADD_SUB_BIT:inst11|Add0~4       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~5       ; |Block1|ADD_SUB_BIT:inst11|Add0~5       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~6       ; |Block1|ADD_SUB_BIT:inst11|Add0~6       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~7       ; |Block1|ADD_SUB_BIT:inst11|Add0~7       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~8       ; |Block1|ADD_SUB_BIT:inst11|Add0~8       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~9       ; |Block1|ADD_SUB_BIT:inst11|Add0~9       ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~10      ; |Block1|ADD_SUB_BIT:inst11|Add0~10      ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~11      ; |Block1|ADD_SUB_BIT:inst11|Add0~11      ; out0             ;
; |Block1|ADD_SUB_BIT:inst11|Add0~12      ; |Block1|ADD_SUB_BIT:inst11|Add0~12      ; out0             ;
+-----------------------------------------+-----------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 222 10/21/2009 SJ Web Edition
    Info: Processing started: Wed May 04 02:46:38 2016
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off PowerComputing -c PowerComputing
Info: Using vector source file "C:/Users/Tyler/Documents/CEEN 3130/PowerComputing/PowerComputing.vwf"
Warning: Wrong node type and/or width for node "|Block1|PowerComputing:inst|Y" in vector source file. Node in design is of type Enum and of width 1, but node in vector source file is of type 9-Level and of width 1.
Warning: Signal name "|Block1|PowerComputing:inst|Y" changed to enum type
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      54.67 %
Info: Number of transitions in simulation is 1850
Info: Quartus II Simulator was successful. 0 errors, 2 warnings
    Info: Peak virtual memory: 171 megabytes
    Info: Processing ended: Wed May 04 02:46:39 2016
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


