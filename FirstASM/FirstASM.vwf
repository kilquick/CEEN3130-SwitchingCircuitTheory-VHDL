/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1500.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("__FirstASM:inst|y")
{
	VALUES = "Undefined";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inData")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("inData[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("inData[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "inData";
}

SIGNAL("ADD")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SUB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MUL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Count";
}

SIGNAL("Count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Count";
}

SIGNAL("Count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Count";
}

SIGNAL("Count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Count";
}

SIGNAL("Result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Result[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("Result[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Result";
}

SIGNAL("RESTART")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RESETn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ClMul")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DONE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EnAdd/Sub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EnCnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("EnMul")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FULL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SUBout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("FirstASM:inst|y")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "__FirstASM:inst|y";
}

SIGNAL("ClCnt")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 37;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("inData[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("inData[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1500.0;
	}
}

TRANSITION_LIST("ADD")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 380.0;
	}
}

TRANSITION_LIST("SUB")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 480.0;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("MUL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 720.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 280.0;
	}
}

TRANSITION_LIST("Count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("Result[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("RESTART")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 80.0;
	}
}

TRANSITION_LIST("RESETn")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1460.0;
	}
}

TRANSITION_LIST("ClMul")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("DONE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("EnAdd/Sub")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("EnCnt")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("EnMul")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("FULL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("SUBout")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

TRANSITION_LIST("FirstASM:inst|y")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Undefined FOR 1500.0;
	}
}

TRANSITION_LIST("ClCnt")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1500.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "RESETn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "inData";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "inData[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "inData[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "ADD";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SUB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MUL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RESTART";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "Count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "Count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "Count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "Count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "Result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "Result[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "Result[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "DONE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "FULL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SUBout";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ClCnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ClMul";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EnAdd/Sub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EnCnt";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "EnMul";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "FirstASM:inst|y";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 26075;
	MASTER = TRUE;
}
;
